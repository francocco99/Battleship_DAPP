{
  "contractName": "GameRule",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "GameCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "GameFull",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "GameJoin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "GameStart",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "Id",
          "type": "uint256"
        }
      ],
      "name": "joinGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"GameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameFull\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameJoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameStart\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Id\",\"type\":\"uint256\"}],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GameRule.sol\":\"GameRule\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"project:/contracts/GameBoard.sol\":{\"keccak256\":\"0xab2998ef98414c372e23413a3a8264bb5a7735f6a7a148f394187fb9a25b6382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0fc386e33ea519ee6c38d7e76ffc86b1d3e31558c7c31ab9522874bd0459eb6\",\"dweb:/ipfs/QmdwgcbKHNHP9VX8Qrpey5DWEhWMXcwJQB62kvPC4Mxqzn\"]},\"project:/contracts/GameRule.sol\":{\"keccak256\":\"0xe3e2b062fe725fe45bcd8e56484a091a14794b3e42c7ff5d8375eb6d095ff48c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2339361abed554abb046e302924236dd6298f24aa5593e3eb66c5792dc93c734\",\"dweb:/ipfs/Qmea23zj8XmS6vNiqJpJxuNFi1Dgo775Bc1DymGreWQbtH\"]}},\"version\":1}",
  "bytecode": "0x60806040525f8055348015610012575f80fd5b50610be3806100205f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80637255d72914610038578063efaa55a014610042575b5f80fd5b61004061005e565b005b61005c600480360381019061005791906102f2565b610161565b005b5f805490505f3382604051610072906102ae565b61007d92919061036b565b604051809103905ff080158015610096573d5f803e3d5ffd5b5090505f60015f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055508060025f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbd19c47e9925eb6f7be8bb1c13a841e0240aaeaf17f217e90022e9c8eb66877f8260405161013f9190610392565b60405180910390a15f80815480929190610158906103d8565b91905055505050565b6001151560015f8381526020019081526020015f205f9054906101000a900460ff161515036101bb577fb3ed896d8cd50041d5d4efdbcbe1effd8f69b0ea48d422ab2f3a09bc427603e160405160405180910390a16102ab565b6001805f8381526020019081526020015f205f6101000a81548160ff0219169083151502179055505f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b028361a336040518263ffffffff1660e01b8152600401610250919061041f565b5f604051808303815f87803b158015610267575f80fd5b505af1158015610279573d5f803e3d5ffd5b505050507f931b8f3d7d3c1cdfc7bea63c9596be6b0250ebf59749614c01643e6e8328c7fa60405160405180910390a1505b50565b6107758061043983390190565b5f80fd5b5f819050919050565b6102d1816102bf565b81146102db575f80fd5b50565b5f813590506102ec816102c8565b92915050565b5f60208284031215610307576103066102bb565b5b5f610314848285016102de565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103468261031d565b9050919050565b6103568161033c565b82525050565b610365816102bf565b82525050565b5f60408201905061037e5f83018561034d565b61038b602083018461035c565b9392505050565b5f6020820190506103a55f83018461035c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103e2826102bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610414576104136103ab565b5b600182019050919050565b5f6020820190506104325f83018461034d565b9291505056fe608060405234801561000f575f80fd5b5060405161077538038061077583398181016040528101906100319190610138565b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550805f819055505f60075f6101000a81548160ff0219169083600581111561009b5761009a610176565b5b021790555050506101a3565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d4826100ab565b9050919050565b6100e4816100ca565b81146100ee575f80fd5b50565b5f815190506100ff816100db565b92915050565b5f819050919050565b61011781610105565b8114610121575f80fd5b50565b5f815190506101328161010e565b92915050565b5f806040838503121561014e5761014d6100a7565b5b5f61015b858286016100f1565b925050602061016c85828601610124565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6105c5806101b05f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c806375529baf1161006457806375529baf146100f55780637f696b79146100ff578063911b8b4e1461011d578063b028361a14610139578063b3a92a601461015557610091565b806323464fa714610095578063547125241461009f57806355848e38146100bd57806357b5b32f146100d9575b5f80fd5b61009d610173565b005b6100a761021e565b6040516100b491906103ad565b60405180910390f35b6100d760048036038101906100d291906103fd565b610243565b005b6100f360048036038101906100ee91906103fd565b61024d565b005b6100fd610257565b005b610107610259565b60405161011491906103ad565b60405180910390f35b6101376004803603810190610132919061045b565b61027e565b005b610153600480360381019061014e91906104b0565b6102c3565b005b61015d61035c565b60405161016a919061054e565b60405180910390f35b600654600554036101ef57600554600481905550600260075f6101000a81548160ff021916908360058111156101ac576101ab6104db565b5b02179055507fd33c616b7b943889ca2140d7cbe4ce1ab3dc9bfc7a94659e27f752cfbe46e4aa6004546040516101e29190610576565b60405180910390a161021c565b7fdd758e66ee01dcecee8d8fbbbb5412d39badf7694269298316f36754af478da360405160405180910390a15b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060068190555050565b8060058190555050565b565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9b69868ac25ea1a7cc34b8416317af62ec3718adf5b70cabc43903e50cb8754860405160405180910390a1600160075f6101000a81548160ff02191690836005811115610354576103536104db565b5b021790555050565b60075f9054906101000a900460ff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103978261036e565b9050919050565b6103a78161038d565b82525050565b5f6020820190506103c05f83018461039e565b92915050565b5f80fd5b5f819050919050565b6103dc816103ca565b81146103e6575f80fd5b50565b5f813590506103f7816103d3565b92915050565b5f60208284031215610412576104116103c6565b5b5f61041f848285016103e9565b91505092915050565b5f819050919050565b61043a81610428565b8114610444575f80fd5b50565b5f8135905061045581610431565b92915050565b5f602082840312156104705761046f6103c6565b5b5f61047d84828501610447565b91505092915050565b61048f8161038d565b8114610499575f80fd5b50565b5f813590506104aa81610486565b92915050565b5f602082840312156104c5576104c46103c6565b5b5f6104d28482850161049c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60068110610519576105186104db565b5b50565b5f81905061052982610508565b919050565b5f6105388261051c565b9050919050565b6105488161052e565b82525050565b5f6020820190506105615f83018461053f565b92915050565b610570816103ca565b82525050565b5f6020820190506105895f830184610567565b9291505056fea264697066735822122068eea47abd5a6d634e2a844874a20a16737f4967f515c4649669e6a9ab1e498564736f6c63430008140033a2646970667358221220873cb40c6ccad98503cbb9e35032ed3d3c002f02d1ac3251d1e6a488040d938964736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b5060043610610034575f3560e01c80637255d72914610038578063efaa55a014610042575b5f80fd5b61004061005e565b005b61005c600480360381019061005791906102f2565b610161565b005b5f805490505f3382604051610072906102ae565b61007d92919061036b565b604051809103905ff080158015610096573d5f803e3d5ffd5b5090505f60015f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055508060025f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbd19c47e9925eb6f7be8bb1c13a841e0240aaeaf17f217e90022e9c8eb66877f8260405161013f9190610392565b60405180910390a15f80815480929190610158906103d8565b91905055505050565b6001151560015f8381526020019081526020015f205f9054906101000a900460ff161515036101bb577fb3ed896d8cd50041d5d4efdbcbe1effd8f69b0ea48d422ab2f3a09bc427603e160405160405180910390a16102ab565b6001805f8381526020019081526020015f205f6101000a81548160ff0219169083151502179055505f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b028361a336040518263ffffffff1660e01b8152600401610250919061041f565b5f604051808303815f87803b158015610267575f80fd5b505af1158015610279573d5f803e3d5ffd5b505050507f931b8f3d7d3c1cdfc7bea63c9596be6b0250ebf59749614c01643e6e8328c7fa60405160405180910390a1505b50565b6107758061043983390190565b5f80fd5b5f819050919050565b6102d1816102bf565b81146102db575f80fd5b50565b5f813590506102ec816102c8565b92915050565b5f60208284031215610307576103066102bb565b5b5f610314848285016102de565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103468261031d565b9050919050565b6103568161033c565b82525050565b610365816102bf565b82525050565b5f60408201905061037e5f83018561034d565b61038b602083018461035c565b9392505050565b5f6020820190506103a55f83018461035c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103e2826102bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610414576104136103ab565b5b600182019050919050565b5f6020820190506104325f83018461034d565b9291505056fe608060405234801561000f575f80fd5b5060405161077538038061077583398181016040528101906100319190610138565b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550805f819055505f60075f6101000a81548160ff0219169083600581111561009b5761009a610176565b5b021790555050506101a3565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d4826100ab565b9050919050565b6100e4816100ca565b81146100ee575f80fd5b50565b5f815190506100ff816100db565b92915050565b5f819050919050565b61011781610105565b8114610121575f80fd5b50565b5f815190506101328161010e565b92915050565b5f806040838503121561014e5761014d6100a7565b5b5f61015b858286016100f1565b925050602061016c85828601610124565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6105c5806101b05f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c806375529baf1161006457806375529baf146100f55780637f696b79146100ff578063911b8b4e1461011d578063b028361a14610139578063b3a92a601461015557610091565b806323464fa714610095578063547125241461009f57806355848e38146100bd57806357b5b32f146100d9575b5f80fd5b61009d610173565b005b6100a761021e565b6040516100b491906103ad565b60405180910390f35b6100d760048036038101906100d291906103fd565b610243565b005b6100f360048036038101906100ee91906103fd565b61024d565b005b6100fd610257565b005b610107610259565b60405161011491906103ad565b60405180910390f35b6101376004803603810190610132919061045b565b61027e565b005b610153600480360381019061014e91906104b0565b6102c3565b005b61015d61035c565b60405161016a919061054e565b60405180910390f35b600654600554036101ef57600554600481905550600260075f6101000a81548160ff021916908360058111156101ac576101ab6104db565b5b02179055507fd33c616b7b943889ca2140d7cbe4ce1ab3dc9bfc7a94659e27f752cfbe46e4aa6004546040516101e29190610576565b60405180910390a161021c565b7fdd758e66ee01dcecee8d8fbbbb5412d39badf7694269298316f36754af478da360405160405180910390a15b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060068190555050565b8060058190555050565b565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9b69868ac25ea1a7cc34b8416317af62ec3718adf5b70cabc43903e50cb8754860405160405180910390a1600160075f6101000a81548160ff02191690836005811115610354576103536104db565b5b021790555050565b60075f9054906101000a900460ff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103978261036e565b9050919050565b6103a78161038d565b82525050565b5f6020820190506103c05f83018461039e565b92915050565b5f80fd5b5f819050919050565b6103dc816103ca565b81146103e6575f80fd5b50565b5f813590506103f7816103d3565b92915050565b5f60208284031215610412576104116103c6565b5b5f61041f848285016103e9565b91505092915050565b5f819050919050565b61043a81610428565b8114610444575f80fd5b50565b5f8135905061045581610431565b92915050565b5f602082840312156104705761046f6103c6565b5b5f61047d84828501610447565b91505092915050565b61048f8161038d565b8114610499575f80fd5b50565b5f813590506104aa81610486565b92915050565b5f602082840312156104c5576104c46103c6565b5b5f6104d28482850161049c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60068110610519576105186104db565b5b50565b5f81905061052982610508565b919050565b5f6105388261051c565b9050919050565b6105488161052e565b82525050565b5f6020820190506105615f83018461053f565b92915050565b610570816103ca565b82525050565b5f6020820190506105895f830184610567565b9291505056fea264697066735822122068eea47abd5a6d634e2a844874a20a16737f4967f515c4649669e6a9ab1e498564736f6c63430008140033a2646970667358221220873cb40c6ccad98503cbb9e35032ed3d3c002f02d1ac3251d1e6a488040d938964736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2723:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:3",
                "type": ""
              }
            ],
            "src": "417:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:3",
                "type": ""
              }
            ],
            "src": "545:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:3",
                "type": ""
              }
            ],
            "src": "690:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:3",
                "type": ""
              }
            ],
            "src": "1025:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:3",
                "type": ""
              }
            ],
            "src": "1157:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:3",
                "type": ""
              }
            ],
            "src": "1259:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1448:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1465:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1488:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1470:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1470:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1458:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1458:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1458:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1436:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1443:3:3",
                "type": ""
              }
            ],
            "src": "1383:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1633:206:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1643:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1655:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1666:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1651:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1651:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1643:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1723:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1736:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1747:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1732:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1732:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1679:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1679:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1804:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1817:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1828:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1813:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1813:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1760:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1760:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1760:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1597:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1609:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1617:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1628:4:3",
                "type": ""
              }
            ],
            "src": "1507:332:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1943:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1953:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1965:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1976:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1961:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1961:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1953:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2033:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2046:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1989:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1989:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1915:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1927:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1938:4:3",
                "type": ""
              }
            ],
            "src": "1845:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2101:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2121:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2111:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2111:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2215:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2208:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2208:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2208:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2239:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2242:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2232:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2232:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2232:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2073:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2302:190:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2312:33:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2339:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2321:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2321:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2312:5:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2435:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2437:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2437:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2437:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2360:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2367:66:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2357:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2357:77:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2354:103:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2466:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2477:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2484:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2473:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2473:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2466:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2288:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2298:3:3",
                "type": ""
              }
            ],
            "src": "2259:233:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2596:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2606:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2618:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2629:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2614:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2614:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2606:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2686:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2699:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2710:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2695:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2695:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2642:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2642:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2642:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2568:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2580:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2591:4:3",
                "type": ""
              }
            ],
            "src": "2498:222:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "93:916:2:-:0;;;131:1;117:15;;964:33;;;;;;;;;;93:916;;;;;;",
  "deployedSourceMap": "93:916:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:281;;;:::i;:::-;;655:304;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;369:281;434:7;444:8;;434:18;;462:17;495:10;506:2;481:28;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;462:47;;533:5;519:9;:13;529:2;519:13;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;585:7;571:9;:13;581:2;571:13;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;607:15;619:2;607:15;;;;;;:::i;:::-;;;;;;;;632:8;;:11;;;;;;;;;:::i;:::-;;;;;;403:247;;369:281::o;655:304::-;721:4;706:19;;:9;:13;716:2;706:13;;;;;;;;;;;;;;;;;;;;;:19;;;703:250;;754:10;;;;;;;;;;703:250;;;825:4;811:9;:13;821:2;811:13;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;843:14;858:9;:13;868:2;858:13;;;;;;;;;;;;;;;;;;;;;843:28;;885:4;:16;;;902:10;885:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:10;;;;;;;;;;797:156;703:250;655:304;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:::-;1470:24;1488:5;1470:24;:::i;:::-;1465:3;1458:37;1383:118;;:::o;1507:332::-;1628:4;1666:2;1655:9;1651:18;1643:26;;1679:71;1747:1;1736:9;1732:17;1723:6;1679:71;:::i;:::-;1760:72;1828:2;1817:9;1813:18;1804:6;1760:72;:::i;:::-;1507:332;;;;;:::o;1845:222::-;1938:4;1976:2;1965:9;1961:18;1953:26;;1989:71;2057:1;2046:9;2042:17;2033:6;1989:71;:::i;:::-;1845:222;;;;:::o;2073:180::-;2121:77;2118:1;2111:88;2218:4;2215:1;2208:15;2242:4;2239:1;2232:15;2259:233;2298:3;2321:24;2339:5;2321:24;:::i;:::-;2312:33;;2367:66;2360:5;2357:77;2354:103;;2437:18;;:::i;:::-;2354:103;2484:1;2477:5;2473:13;2466:20;;2259:233;;;:::o;2498:222::-;2591:4;2629:2;2618:9;2614:18;2606:26;;2642:71;2710:1;2699:9;2695:17;2686:6;2642:71;:::i;:::-;2498:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\nimport \"./GameBoard.sol\";\n  contract GameRule {\n    uint IncremId=0;\n    //BoardGame[] private Games;\n\n    mapping(uint256 => bool) GamesJoin;\n    mapping(uint256 => BoardGame) Listgames;\n    event GameStart();\n    event GameCreated(uint id);\n    event GameJoin();\n    event GameFull();\n   \n   \n    \n    function createGame() public \n    {\n        // generate \n        uint Id = IncremId;\n        BoardGame Gamenew= new BoardGame(msg.sender,Id);\n        GamesJoin[Id]=false; // il game è joinable\n        Listgames[Id]=Gamenew;\n        emit GameCreated(Id);\n        IncremId ++;\n    }\n    function joinGame(uint Id) public\n    {\n        if(GamesJoin[Id]==true)\n        {\n            emit GameFull();\n        }\n        else\n        {\n            GamesJoin[Id]=true;\n            BoardGame Game=Listgames[Id];\n            Game.setSecondPl(msg.sender);\n            emit GameJoin();\n        }\n    }\n    constructor() public\n    {\n\n    }\n    \n    \n}\n\n",
  "sourcePath": "C:\\Users\\fraci\\Desktop\\Solidity_Pro\\Solidity_project\\contracts\\GameRule.sol",
  "ast": {
    "absolutePath": "project:/contracts/GameRule.sol",
    "exportedSymbols": {
      "BoardGame": [
        714
      ],
      "GameRule": [
        822
      ],
      "MerkleProof": [
        527
      ]
    },
    "id": 823,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 716,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:2"
      },
      {
        "absolutePath": "project:/contracts/GameBoard.sol",
        "file": "./GameBoard.sol",
        "id": 717,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 823,
        "sourceUnit": 715,
        "src": "65:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GameRule",
        "contractDependencies": [
          714
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 822,
        "linearizedBaseContracts": [
          822
        ],
        "name": "GameRule",
        "nameLocation": "102:8:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 720,
            "mutability": "mutable",
            "name": "IncremId",
            "nameLocation": "122:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 822,
            "src": "117:15:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 718,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "117:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 719,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "131:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 724,
            "mutability": "mutable",
            "name": "GamesJoin",
            "nameLocation": "197:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 822,
            "src": "172:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 723,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 721,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "180:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "172:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 722,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "191:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 729,
            "mutability": "mutable",
            "name": "Listgames",
            "nameLocation": "242:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 822,
            "src": "212:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_BoardGame_$714_$",
              "typeString": "mapping(uint256 => contract BoardGame)"
            },
            "typeName": {
              "id": 728,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 725,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "220:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "212:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_BoardGame_$714_$",
                "typeString": "mapping(uint256 => contract BoardGame)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 727,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 726,
                  "name": "BoardGame",
                  "nameLocations": [
                    "231:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 714,
                  "src": "231:9:2"
                },
                "referencedDeclaration": 714,
                "src": "231:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_BoardGame_$714",
                  "typeString": "contract BoardGame"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "4cf2e2dcdeacb2322843921968cb0e6a97a686594cb0a4f29abb65a7ed651952",
            "id": 731,
            "name": "GameStart",
            "nameLocation": "263:9:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:2:2"
            },
            "src": "257:18:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bd19c47e9925eb6f7be8bb1c13a841e0240aaeaf17f217e90022e9c8eb66877f",
            "id": 735,
            "name": "GameCreated",
            "nameLocation": "286:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "303:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "298:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "297:9:2"
            },
            "src": "280:27:2"
          },
          {
            "anonymous": false,
            "eventSelector": "931b8f3d7d3c1cdfc7bea63c9596be6b0250ebf59749614c01643e6e8328c7fa",
            "id": 737,
            "name": "GameJoin",
            "nameLocation": "318:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:2:2"
            },
            "src": "312:17:2"
          },
          {
            "anonymous": false,
            "eventSelector": "b3ed896d8cd50041d5d4efdbcbe1effd8f69b0ea48d422ab2f3a09bc427603e1",
            "id": 739,
            "name": "GameFull",
            "nameLocation": "340:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:2:2"
            },
            "src": "334:17:2"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "403:247:2",
              "statements": [
                {
                  "assignments": [
                    743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 743,
                      "mutability": "mutable",
                      "name": "Id",
                      "nameLocation": "439:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "434:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 742,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "434:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 745,
                  "initialValue": {
                    "id": 744,
                    "name": "IncremId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 720,
                    "src": "444:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "434:18:2"
                },
                {
                  "assignments": [
                    748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 748,
                      "mutability": "mutable",
                      "name": "Gamenew",
                      "nameLocation": "472:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "462:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BoardGame_$714",
                        "typeString": "contract BoardGame"
                      },
                      "typeName": {
                        "id": 747,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 746,
                          "name": "BoardGame",
                          "nameLocations": [
                            "462:9:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 714,
                          "src": "462:9:2"
                        },
                        "referencedDeclaration": 714,
                        "src": "462:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BoardGame_$714",
                          "typeString": "contract BoardGame"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 756,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 752,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "495:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "499:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "495:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 754,
                        "name": "Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "506:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "481:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_BoardGame_$714_$",
                        "typeString": "function (address,uint256) returns (contract BoardGame)"
                      },
                      "typeName": {
                        "id": 750,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 749,
                          "name": "BoardGame",
                          "nameLocations": [
                            "485:9:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 714,
                          "src": "485:9:2"
                        },
                        "referencedDeclaration": 714,
                        "src": "485:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BoardGame_$714",
                          "typeString": "contract BoardGame"
                        }
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BoardGame_$714",
                      "typeString": "contract BoardGame"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "462:47:2"
                },
                {
                  "expression": {
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 757,
                        "name": "GamesJoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "519:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 759,
                      "indexExpression": {
                        "id": 758,
                        "name": "Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "529:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "519:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "533:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "519:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "519:19:2"
                },
                {
                  "expression": {
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 763,
                        "name": "Listgames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "571:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_BoardGame_$714_$",
                          "typeString": "mapping(uint256 => contract BoardGame)"
                        }
                      },
                      "id": 765,
                      "indexExpression": {
                        "id": 764,
                        "name": "Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "581:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "571:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BoardGame_$714",
                        "typeString": "contract BoardGame"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 766,
                      "name": "Gamenew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 748,
                      "src": "585:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BoardGame_$714",
                        "typeString": "contract BoardGame"
                      }
                    },
                    "src": "571:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BoardGame_$714",
                      "typeString": "contract BoardGame"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "571:21:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 770,
                        "name": "Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "619:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 769,
                      "name": "GameCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "607:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "607:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "EmitStatement",
                  "src": "602:20:2"
                },
                {
                  "expression": {
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "632:11:2",
                    "subExpression": {
                      "id": 773,
                      "name": "IncremId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "632:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "632:11:2"
                }
              ]
            },
            "functionSelector": "7255d729",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createGame",
            "nameLocation": "378:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "388:2:2"
            },
            "returnParameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "403:0:2"
            },
            "scope": 822,
            "src": "369:281:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "693:266:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 782,
                        "name": "GamesJoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "706:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 784,
                      "indexExpression": {
                        "id": 783,
                        "name": "Id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "716:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "706:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "721:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "706:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 814,
                    "nodeType": "Block",
                    "src": "797:156:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 791,
                              "name": "GamesJoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 724,
                              "src": "811:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 793,
                            "indexExpression": {
                              "id": 792,
                              "name": "Id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "821:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "811:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "825:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "811:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "ExpressionStatement",
                        "src": "811:18:2"
                      },
                      {
                        "assignments": [
                          799
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 799,
                            "mutability": "mutable",
                            "name": "Game",
                            "nameLocation": "853:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 814,
                            "src": "843:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BoardGame_$714",
                              "typeString": "contract BoardGame"
                            },
                            "typeName": {
                              "id": 798,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 797,
                                "name": "BoardGame",
                                "nameLocations": [
                                  "843:9:2"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 714,
                                "src": "843:9:2"
                              },
                              "referencedDeclaration": 714,
                              "src": "843:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BoardGame_$714",
                                "typeString": "contract BoardGame"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 803,
                        "initialValue": {
                          "baseExpression": {
                            "id": 800,
                            "name": "Listgames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "858:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_BoardGame_$714_$",
                              "typeString": "mapping(uint256 => contract BoardGame)"
                            }
                          },
                          "id": 802,
                          "indexExpression": {
                            "id": 801,
                            "name": "Id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "868:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "858:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BoardGame_$714",
                            "typeString": "contract BoardGame"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "843:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 807,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "902:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "906:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "902:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 804,
                              "name": "Game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "885:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BoardGame_$714",
                                "typeString": "contract BoardGame"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "890:11:2",
                            "memberName": "setSecondPl",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 582,
                            "src": "885:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "885:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 810,
                        "nodeType": "ExpressionStatement",
                        "src": "885:28:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 811,
                            "name": "GameJoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 737,
                            "src": "932:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "932:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 813,
                        "nodeType": "EmitStatement",
                        "src": "927:15:2"
                      }
                    ]
                  },
                  "id": 815,
                  "nodeType": "IfStatement",
                  "src": "703:250:2",
                  "trueBody": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "735:40:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 787,
                            "name": "GameFull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "754:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "754:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 789,
                        "nodeType": "EmitStatement",
                        "src": "749:15:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "efaa55a0",
            "id": 817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "joinGame",
            "nameLocation": "664:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "Id",
                  "nameLocation": "678:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "673:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "672:9:2"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "693:0:2"
            },
            "scope": 822,
            "src": "655:304:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 820,
              "nodeType": "Block",
              "src": "989:8:2",
              "statements": []
            },
            "id": 821,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:2:2"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:0:2"
            },
            "scope": 822,
            "src": "964:33:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 823,
        "src": "93:916:2",
        "usedErrors": [],
        "usedEvents": [
          731,
          735,
          737,
          739
        ]
      }
    ],
    "src": "32:979:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-06-30T09:30:05.078Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}